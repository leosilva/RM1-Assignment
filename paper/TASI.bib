Automatically generated by Mendeley Desktop 1.19.4
Any changes to this file will be lost if it is regenerated by Mendeley.

BibTeX export options can be customized via Preferences -> BibTeX in Mendeley Desktop

@article{Graziotin2017d,
abstract = {The growing literature on affect among software developers mostly reports on the linkage between happiness, software quality, and developer productivity. Understanding the positive side of happiness - positive emotions and moods - is an attractive and important endeavor. Scholars in industrial and organizational psychology have suggested that also studying the negative side - unhappiness - could lead to cost-effective ways of enhancing working conditions, job performance, and to limiting the occurrence of psychological disorders. Our comprehension of the consequences of (un)happiness among developers is still too shallow, and is mainly expressed in terms of development productivity and software quality. In this paper, we attempt to uncover the experienced consequences of unhappiness among software developers. Using qualitative data analysis of the responses given by 181 questionnaire participants, we identified 49 consequences of unhappiness while doing software development. We found detrimental consequences on developers' mental well-being, the software development process, and the produced artifacts. Our classification scheme, available as open data, will spawn new happiness research opportunities of cause-effect type, and it can act as a guideline for practitioners for identifying damaging effects of unhappiness and for fostering happiness on the job.},
archivePrefix = {arXiv},
arxivId = {1701.05789},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1109/SEmotion.2017.5},
eprint = {1701.05789},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsIntelligentSystems/references/1701.05789.pdf:pdf},
isbn = {9781538627938},
journal = {Proceedings - 2017 IEEE/ACM 2nd International Workshop on Emotion Awareness in Software Engineering, SEmotion 2017},
keywords = {affect,behavioral software engineering,developer experience,emotion,happiness,human aspects,mood},
pages = {42--47},
title = {{Consequences of unhappiness while developing software}},
year = {2017}
}
@article{Fisher2000,
abstract = {Job satisfaction is often described as an affective response to one's job, but is usually measured largely as a cognitive evaluation of job features. This paper explores several hypothesized relationships between real time affect while working and standard measures of job satisfaction. Experience sampling methodology was used to obtain up to 50 reports of immediate mood and emotions from 121 employed persons over a two week period. As expected, real time affect is related to overall satisfaction but is not identical to satisfaction. Moment to moment affect is more strongly related to a faces measure of satisfaction than to more verbal measures of satisfaction. Positive and negative emotions both make unique contributions to predicting overall satisfaction, and affect accounts for variance in overall satisfaction above and beyond facet satisfactions. Frequency of net positive emotion is a stronger predictor of overall satisfaction than is intensity of positive emotion. It is concluded that affect while working is a missing piece of overall job attitude, as well as a phenomenon worthy of investigation in its own right. Implications for further research and for improving the conceptualization and measurement of job satisfaction are discussed. Copyright {\textcopyright} 2000 John Wiley {\&} Sons, Ltd.},
author = {Fisher, Cynthia D.},
doi = {10.1002/(SICI)1099-1379(200003)21:2<185::AID-JOB34>3.0.CO;2-M},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/Fisher-2000-Journal{\_}of{\_}Organizational{\_}Behavior.pdf:pdf},
issn = {08943796},
journal = {Journal of Organizational Behavior},
number = {2},
pages = {185--202},
title = {{Mood and emotions while working: Missing pieces of job satisfaction?}},
volume = {21},
year = {2000}
}
@article{Graziotin2017e,
abstract = {The happy-productive worker thesis states that happy workers are more productive. Recent research in software engineering supports the thesis, and the ideal of flourishing happiness among software developers is often expressed among industry practitioners. However, the literature suggests that a cost-effective way to foster happiness and productivity among workers could be to limit unhappiness. Psychological disorders such as job burnout and anxiety could also be reduced by limiting the negative experiences of software developers. Simultaneously, a baseline assessment of (un)happiness and knowledge about how developers experience it are missing. In this paper, we broaden the understanding of unhappiness among software developers in terms of (1) the software developer population distribution of (un)happiness, and (2) the causes of unhappiness while developing software. We conducted a large-scale quantitative and qualitative survey, incorporating a psychometrically validated instrument for measuring (un)happiness, with 2 220 developers, yielding a rich and balanced sample of 1318 complete responses. Our results indicate that software developers are a slightly happy population, but the need for limiting the unhappiness of developers remains. We also identified 219 factors representing causes of unhappiness while developing software. Our results, which are available as open data, can act as guidelines for practitioners in management positions and developers in general for fostering happiness on the job. We suggest considering happiness in future studies of both human and technical aspects in software engineering.},
archivePrefix = {arXiv},
arxivId = {1703.04993},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1145/3084226.3084242},
eprint = {1703.04993},
isbn = {9781450348041},
journal = {ACM International Conference Proceeding Series},
keywords = {Affect,Behavioral software engineering,Developer experience,Emotion,Happiness,Human aspects,Mood},
pages = {324--333},
title = {{On the unhappiness of software developers}},
volume = {Part F1286},
year = {2017}
}
@article{Graziotin2014a,
abstract = {For more than thirty years, it has been claimed that a way to improve software developers' productivity and software quality is to focus on people and to provide incentives to make developers satisfied and happy. This claim has rarely been verified in software engineering research, which faces an additional challenge in comparison to more traditional engineering fields: software development is an intellectual activity and is dominated by often-neglected human factors (called human aspects in software engineering research). Among the many skills required for software development, developers must possess high analytical problem-solving skills and creativity for the software construction process. According to psychology research, affective states-emotions and moods-deeply influence the cognitive processing abilities and performance of workers, including creativity and analytical problem solving. Nonetheless, little research has investigated the correlation between the affective states, creativity, and analytical problem-solving performance of programmers. This article echoes the call to employ psychological measurements in software engineering research.We report a study with 42 participants to investigate the relationship between the affective states, creativity, and analytical problem-solving skills of software developers. The results offer support for the claim that happy developers are indeed better problem solvers in terms of their analytical abilities. The following contributions are made by this study: (1) providing a better understanding of the impact of affective states on the creativity and analytical problem-solving capacities of developers, (2) introducing and validating psychological measurements, theories, and concepts of affective states, creativity, and analytical-problem-solving skills in empirical software engineering, and (3) raising the need for studying the human factors of software engineering by employing amultidisciplinary viewpoint. {\textcopyright} 2014 Graziotin et al.},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.7717/peerj.289},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/peerj-289.pdf:pdf},
issn = {21678359},
journal = {PeerJ},
keywords = {Affect,Affective state,Analytical problem-solving,Creativity,Emotion,Feeling,Human aspects,Human factors,Mood,Software development},
number = {1},
title = {{Happy software developers solve problems better: Psychological measurements in empirical software engineering}},
volume = {2014},
year = {2014}
}
@article{Guzman2013,
abstract = {Developers and managers need to be aware of the emotional climate of the projects they are involved to take corrective actions when necessary and to have a better understanding of the social factors affecting the project. With the growing trend of distributed teams and textual communication this type of awareness is more difficult to obtain and maintain. We propose to improve emotional climate awareness in software development projects by means of a visualization prototype which includes general and detailed views of the topics and emotions expressed in software project collaboration artifacts. We performed an initial case study in which the mailing list content of a software project was visualized. The study suggests that the length, frequency and emotion diversity of the exchanged content varies according to the project phase. However, a more extensive evaluation needs to be made. {\textcopyright} 2013 IEEE.},
author = {Guzman, Emitza},
doi = {10.1109/VISSOFT.2013.6650529},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/06650529.pdf:pdf},
isbn = {9781479914579},
journal = {2013 1st IEEE Working Conference on Software Visualization - Proceedings of VISSOFT 2013},
pages = {1--4},
publisher = {IEEE},
title = {{Visualizing emotions in software development projects}},
year = {2013}
}
@article{Murgia2014,
abstract = {Software development is a collaborative activity in which developers interact to create and maintain a complex software system. Human collaboration inevitably evokes emotions like joy or sadness, which can affect the collaboration either positively or negatively, yet not much is known about the individual emotions and their role for software development stakeholders. In this study, we analyze whether development artifacts like issue reports carry any emotional information about software development. This is a first step towards verifying the feasibility of an automatic tool for emotion mining in software development artifacts: if humans cannot determine any emotion from a software artifact, neither can a tool. Analysis of the Apache Software Foundation issue tracking system shows that developers do express emotions (in particular gratitude, joy and sadness). However, the more context is provided about an issue report, the more human raters start to doubt and nuance their interpretation of emotions. More investigation is needed before building a fully automatic emotion mining tool. Copyright is held by the author/owner(s). Publication rights licensed to ACM.},
author = {Murgia, Alessandro and Tourani, Parastou and Adams, Bram and Ortu, Marco},
doi = {10.1145/2597073.2597086},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/murgia.pdf:pdf},
isbn = {9781450328630},
journal = {11th Working Conference on Mining Software Repositories, MSR 2014 - Proceedings},
keywords = {Emotion mining,Empirical software engineering,Issue report},
number = {May},
pages = {262--271},
title = {{Do developers feel emotions? An exploratory analysis of emotions in software artifacts}},
year = {2014}
}
@article{Guzman2013a,
abstract = {Developers and managers need to be aware of the emotional climate of the projects they are involved to take corrective actions when necessary and to have a better understanding of the social factors affecting the project. With the growing trend of distributed teams and textual communication this type of awareness is more difficult to obtain and maintain. We propose to improve emotional climate awareness in software development projects by means of a visualization prototype which includes general and detailed views of the topics and emotions expressed in software project collaboration artifacts. We performed an initial case study in which the mailing list content of a software project was visualized. The study suggests that the length, frequency and emotion diversity of the exchanged content varies according to the project phase. However, a more extensive evaluation needs to be made. {\textcopyright} 2013 IEEE.},
author = {Guzman, Emitza},
doi = {10.1109/VISSOFT.2013.6650529},
isbn = {9781479914579},
journal = {2013 1st IEEE Working Conference on Software Visualization - Proceedings of VISSOFT 2013},
pages = {1--4},
publisher = {IEEE},
title = {{Visualizing emotions in software development projects}},
year = {2013}
}
@article{Novielli2015,
abstract = {A recent research trend has emerged to study the role of affect in in the social programmer ecosystem, by applying sentiment analysis to the content available in sites such as GitHub and Stack Overflow. In this paper, we aim at assessing the suitability of a state-of-the-art sentiment analysis tool, already applied in social computing, for detecting affective expressions in Stack Overflow. We also aim at verifying the construct validity of choosing sentiment polarity and strength as an appropriate way to operationalize affective states in empirical studies on Stack Overflow. Finally, we underline the need to overcome the limitations induced by domain-dependent use of lexicon that may produce unreliable results.},
author = {Novielli, Nicole and Calefato, Fabio and Lanubile, Filippo},
doi = {10.1145/2804381.2804387},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/SSE{\_}QA{\_}CameraReady.pdf:pdf},
isbn = {9781450338189},
journal = {7th International Workshop on Social Software Engineering, SSE 2015 - Proceedings},
keywords = {Online Q and A,Overflow,Sentiment Analysis,Social Programmer,Social Software Engineering,Stack,Technical Forum},
pages = {33--40},
title = {{The challenges of sentiment detection in the social programmer ecosystem}},
year = {2015}
}
@article{Wrobel2013a,
abstract = {This paper presents the results of a survey on the experience of emotions in the work of software developers. Quantitative analysis revealed information about emotions affecting programmers, their frequency and impact on their performance. The concept of emotional risk to productivity was also presented. It allows to choose the emotional states, which should be avoided. Furthermore, all collected data were analyzed with information about the experience of developers. In addition to most hazardous emotions, those with the most positive impact on productivity were selected. {\textcopyright} 2013 IEEE.},
author = {Wrobel, Michal R.},
doi = {10.1109/HSI.2013.6577875},
isbn = {9781467356374},
journal = {2013 6th International Conference on Human System Interactions, HSI 2013},
pages = {518--523},
publisher = {IEEE},
title = {{Emotions in the software development process}},
year = {2013}
}
@article{Graziotin2017,
abstract = {Recent research in software engineering supports the 'happy-productive' thesis, and the desire of flourishing happiness among programmers is often expressed by industry practitioners. Recent literature has suggested that a cost-effective way to foster happiness and productivity among workers could be to limit unhappiness of developers due to its negative impact. However, possible negative effects of unhappiness are still largely unknown in the software development context. In this paper, we present the first results from a study exploring the consequences of the unhappy developers. Using qualitative data analysis of the survey responses given by 181 participants, we identified 49 potential consequences of unhappiness while developing software. These results have several implications. While raising the awareness of the role of moods, emotions and feelings in software development, we foresee that our classification scheme will spawn new happiness studies linking causes and effects, and it can act as a guideline for developers and managers to foster happiness at work.},
archivePrefix = {arXiv},
arxivId = {1701.02952},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1109/ICSE-C.2017.104},
eprint = {1701.02952},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/1701.02952.pdf:pdf},
isbn = {9781538615898},
journal = {Proceedings - 2017 IEEE/ACM 39th International Conference on Software Engineering Companion, ICSE-C 2017},
keywords = {Affect,Behavioral software engineering,Developer experience,Emotion,Human aspects,Mood},
pages = {362--364},
title = {{Unhappy developers: Bad for themselves, bad for process, and bad for software product}},
year = {2017}
}
@article{Graziotin2014c,
abstract = {Studies show that software developers' happiness pays off when it comes to productivity. {\textcopyright} 1984-2012 IEEE.},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1109/MS.2014.94},
issn = {07407459},
journal = {IEEE Software},
keywords = {development,human factors,performance,software engineering},
number = {4},
pages = {24--27},
publisher = {IEEE},
title = {{Software developers, moods, emotions, and performance}},
volume = {31},
year = {2014}
}
@article{Novielli2015a,
abstract = {A recent research trend has emerged to study the role of affect in in the social programmer ecosystem, by applying sentiment analysis to the content available in sites such as GitHub and Stack Overflow. In this paper, we aim at assessing the suitability of a state-of-the-art sentiment analysis tool, already applied in social computing, for detecting affective expressions in Stack Overflow. We also aim at verifying the construct validity of choosing sentiment polarity and strength as an appropriate way to operationalize affective states in empirical studies on Stack Overflow. Finally, we underline the need to overcome the limitations induced by domain-dependent use of lexicon that may produce unreliable results.},
author = {Novielli, Nicole and Calefato, Fabio and Lanubile, Filippo},
doi = {10.1145/2804381.2804387},
isbn = {9781450338189},
journal = {7th International Workshop on Social Software Engineering, SSE 2015 - Proceedings},
keywords = {Online Q and A,Overflow,Sentiment Analysis,Social Programmer,Social Software Engineering,Stack,Technical Forum},
pages = {33--40},
title = {{The challenges of sentiment detection in the social programmer ecosystem}},
year = {2015}
}
@article{Graziotin2015a,
abstract = {Affects-emotions and moods-have an impact on cognitive activities and the working performance of individuals. Development tasks are undertaken through cognitive processes, yet software engineering research lacks theory on affects and their impact on software development activities. In this paper, we report on an interpretive study aimed at broadening our understanding of the psychology of programming in terms of the experience of affects while programming, and the impact of affects on programming performance. We conducted a qualitative interpretive study based on: face-to-face open-ended interviews, in-field observations, and e-mail exchanges. This enabled us to construct a novel explanatory theory of the impact of affects on development performance. The theory is explicated using an established taxonomy framework. The proposed theory builds upon the concepts of events, affects, attractors, focus, goals, and performance. Theoretical and practical implications are given.},
archivePrefix = {arXiv},
arxivId = {1505.07240},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.7717/peerj-cs.18},
eprint = {1505.07240},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/peerj-cs-18.pdf:pdf},
issn = {21678359},
journal = {PeerJ},
keywords = {Affects,Emotions,Human aspects of software engineering,Interpretivism,Moods,Performance,Process theory,Productivity,Psychology of programming,Theory building},
number = {1},
pages = {1--31},
title = {{How do you feel, developer? An explanatory theory of the impact of affects on programming performance}},
volume = {2015},
year = {2015}
}
@article{Graziotin2014b,
abstract = {For more than thirty years, it has been claimed that a way to improve software developers' productivity and software quality is to focus on people and to provide incentives to make developers satisfied and happy. This claim has rarely been verified in software engineering research, which faces an additional challenge in comparison to more traditional engineering fields: software development is an intellectual activity and is dominated by often-neglected human factors (called human aspects in software engineering research). Among the many skills required for software development, developers must possess high analytical problem-solving skills and creativity for the software construction process. According to psychology research, affective states-emotions and moods-deeply influence the cognitive processing abilities and performance of workers, including creativity and analytical problem solving. Nonetheless, little research has investigated the correlation between the affective states, creativity, and analytical problem-solving performance of programmers. This article echoes the call to employ psychological measurements in software engineering research.We report a study with 42 participants to investigate the relationship between the affective states, creativity, and analytical problem-solving skills of software developers. The results offer support for the claim that happy developers are indeed better problem solvers in terms of their analytical abilities. The following contributions are made by this study: (1) providing a better understanding of the impact of affective states on the creativity and analytical problem-solving capacities of developers, (2) introducing and validating psychological measurements, theories, and concepts of affective states, creativity, and analytical-problem-solving skills in empirical software engineering, and (3) raising the need for studying the human factors of software engineering by employing amultidisciplinary viewpoint. {\textcopyright} 2014 Graziotin et al.},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.7717/peerj.289},
issn = {21678359},
journal = {PeerJ},
keywords = {Affect,Affective state,Analytical problem-solving,Creativity,Emotion,Feeling,Human aspects,Human factors,Mood,Software development},
number = {1},
title = {{Happy software developers solve problems better: Psychological measurements in empirical software engineering}},
volume = {2014},
year = {2014}
}
@article{Graziotin2017c,
abstract = {Recent research in software engineering supports the 'happy-productive' thesis, and the desire of flourishing happiness among programmers is often expressed by industry practitioners. Recent literature has suggested that a cost-effective way to foster happiness and productivity among workers could be to limit unhappiness of developers due to its negative impact. However, possible negative effects of unhappiness are still largely unknown in the software development context. In this paper, we present the first results from a study exploring the consequences of the unhappy developers. Using qualitative data analysis of the survey responses given by 181 participants, we identified 49 potential consequences of unhappiness while developing software. These results have several implications. While raising the awareness of the role of moods, emotions and feelings in software development, we foresee that our classification scheme will spawn new happiness studies linking causes and effects, and it can act as a guideline for developers and managers to foster happiness at work.},
archivePrefix = {arXiv},
arxivId = {1701.02952},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1109/ICSE-C.2017.104},
eprint = {1701.02952},
isbn = {9781538615898},
journal = {Proceedings - 2017 IEEE/ACM 39th International Conference on Software Engineering Companion, ICSE-C 2017},
keywords = {Affect,Behavioral software engineering,Developer experience,Emotion,Human aspects,Mood},
pages = {362--364},
title = {{Unhappy developers: Bad for themselves, bad for process, and bad for software product}},
year = {2017}
}
@article{Ural2013a,
abstract = {Dependence analysis on an Extended Finite State Machine representation of the requirements of a system under test identifies various types of control and data dependencies between transitions caused by a set of modifications on the requirements. These particular types of dependencies capture the effects of the modifications, that is, their direct effects on the changed parts of the system and their side effects on the unchanged parts of the system. Recent work on model-based regression testing shows that dependencies capturing direct effects and side effects of the changes made on the requirements can be used for regression test suite (RTS) reduction (reducing the size of a given test suite by eliminating redundancies), for RTS prioritization (ordering test cases in a given test suite for early fault detection), or for RTS generation (designing a test suite covering the identified dependencies). This paper proposes an additional use of such dependencies, namely, RTS selection, which is the process of selecting a subset of a given test suite to form an RTS by considering the coverage of dependencies related to the effects of the modifications. The dependencies marked during this process as uncovered provide a basis for augmenting an (incomplete) RTS with test cases covering uncovered dependencies. Copyright {\textcopyright} 2012 John Wiley {\&} Sons, Ltd.},
author = {Ural, Hasan and Yenig{\"{u}}n, H{\"{u}}sn{\"{u}}},
doi = {10.1002/smr},
issn = {20477481},
journal = {Journal of software: Evolution and Process},
keywords = {Control dependence,Data dependence,Extended finite state machine,Regression test suite selection,Regression testing},
number = {7},
pages = {681--709},
title = {{Regression test suite selection using dependence analysis}},
volume = {25},
year = {2013}
}
@article{Ural2013,
abstract = {Dependence analysis on an Extended Finite State Machine representation of the requirements of a system under test identifies various types of control and data dependencies between transitions caused by a set of modifications on the requirements. These particular types of dependencies capture the effects of the modifications, that is, their direct effects on the changed parts of the system and their side effects on the unchanged parts of the system. Recent work on model-based regression testing shows that dependencies capturing direct effects and side effects of the changes made on the requirements can be used for regression test suite (RTS) reduction (reducing the size of a given test suite by eliminating redundancies), for RTS prioritization (ordering test cases in a given test suite for early fault detection), or for RTS generation (designing a test suite covering the identified dependencies). This paper proposes an additional use of such dependencies, namely, RTS selection, which is the process of selecting a subset of a given test suite to form an RTS by considering the coverage of dependencies related to the effects of the modifications. The dependencies marked during this process as uncovered provide a basis for augmenting an (incomplete) RTS with test cases covering uncovered dependencies. Copyright {\textcopyright} 2012 John Wiley {\&} Sons, Ltd.},
author = {Ural, Hasan and Yenig{\"{u}}n, H{\"{u}}sn{\"{u}}},
doi = {10.1002/smr},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/smr.1673.pdf:pdf},
issn = {20477481},
journal = {Journal of software: Evolution and Process},
keywords = {Control dependence,Data dependence,Extended finite state machine,Regression test suite selection,Regression testing},
number = {7},
pages = {681--709},
title = {{Regression test suite selection using dependence analysis}},
volume = {25},
year = {2013}
}
@article{Fisher2000a,
abstract = {Job satisfaction is often described as an affective response to one's job, but is usually measured largely as a cognitive evaluation of job features. This paper explores several hypothesized relationships between real time affect while working and standard measures of job satisfaction. Experience sampling methodology was used to obtain up to 50 reports of immediate mood and emotions from 121 employed persons over a two week period. As expected, real time affect is related to overall satisfaction but is not identical to satisfaction. Moment to moment affect is more strongly related to a faces measure of satisfaction than to more verbal measures of satisfaction. Positive and negative emotions both make unique contributions to predicting overall satisfaction, and affect accounts for variance in overall satisfaction above and beyond facet satisfactions. Frequency of net positive emotion is a stronger predictor of overall satisfaction than is intensity of positive emotion. It is concluded that affect while working is a missing piece of overall job attitude, as well as a phenomenon worthy of investigation in its own right. Implications for further research and for improving the conceptualization and measurement of job satisfaction are discussed. Copyright {\textcopyright} 2000 John Wiley {\&} Sons, Ltd.},
author = {Fisher, Cynthia D.},
doi = {10.1002/(SICI)1099-1379(200003)21:2<185::AID-JOB34>3.0.CO;2-M},
issn = {08943796},
journal = {Journal of Organizational Behavior},
number = {2},
pages = {185--202},
title = {{Mood and emotions while working: Missing pieces of job satisfaction?}},
volume = {21},
year = {2000}
}
@article{Graziotin2018a,
abstract = {The growing literature on affect among software developers mostly reports on the linkage between happiness, software quality, and developer productivity. Understanding happiness and unhappiness in all its components – positive and negative emotions and moods – is an attractive and important endeavor. Scholars in industrial and organizational psychology have suggested that understanding happiness and unhappiness could lead to cost-effective ways of enhancing working conditions, job performance, and to limiting the occurrence of psychological disorders. Our comprehension of the consequences of (un)happiness among developers is still too shallow, being mainly expressed in terms of development productivity and software quality. In this paper, we study what happens when developers are happy and unhappy while developing software. Qualitative data analysis of responses given by 317 questionnaire participants identified 42 consequences of unhappiness and 32 of happiness. We found consequences of happiness and unhappiness that are beneficial and detrimental for developers' mental well-being, the software development process, and the produced artifacts. Our classification scheme, available as open data enables new happiness research opportunities of cause-effect type, and it can act as a guideline for practitioners for identifying damaging effects of unhappiness and for fostering happiness on the job.},
archivePrefix = {arXiv},
arxivId = {1707.00432},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1016/j.jss.2018.02.041},
eprint = {1707.00432},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Affect,Behavioral software engineering,Developer experience,Emotion,Happiness,Human aspects},
pages = {32--47},
publisher = {Elsevier Inc.},
title = {{What happens when software developers are (un)happy}},
url = {https://doi.org/10.1016/j.jss.2018.02.041},
volume = {140},
year = {2018}
}
@article{Graziotin2014,
abstract = {Studies show that software developers' happiness pays off when it comes to productivity. {\textcopyright} 1984-2012 IEEE.},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1109/MS.2014.94},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/06834716.pdf:pdf},
issn = {07407459},
journal = {IEEE Software},
keywords = {development,human factors,performance,software engineering},
number = {4},
pages = {24--27},
publisher = {IEEE},
title = {{Software developers, moods, emotions, and performance}},
volume = {31},
year = {2014}
}
@article{Graziotin2018,
abstract = {The growing literature on affect among software developers mostly reports on the linkage between happiness, software quality, and developer productivity. Understanding happiness and unhappiness in all its components – positive and negative emotions and moods – is an attractive and important endeavor. Scholars in industrial and organizational psychology have suggested that understanding happiness and unhappiness could lead to cost-effective ways of enhancing working conditions, job performance, and to limiting the occurrence of psychological disorders. Our comprehension of the consequences of (un)happiness among developers is still too shallow, being mainly expressed in terms of development productivity and software quality. In this paper, we study what happens when developers are happy and unhappy while developing software. Qualitative data analysis of responses given by 317 questionnaire participants identified 42 consequences of unhappiness and 32 of happiness. We found consequences of happiness and unhappiness that are beneficial and detrimental for developers' mental well-being, the software development process, and the produced artifacts. Our classification scheme, available as open data enables new happiness research opportunities of cause-effect type, and it can act as a guideline for practitioners for identifying damaging effects of unhappiness and for fostering happiness on the job.},
archivePrefix = {arXiv},
arxivId = {1707.00432},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1016/j.jss.2018.02.041},
eprint = {1707.00432},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/1-s2.0-S0164121218300323-main.pdf:pdf},
issn = {01641212},
journal = {Journal of Systems and Software},
keywords = {Affect,Behavioral software engineering,Developer experience,Emotion,Happiness,Human aspects},
pages = {32--47},
publisher = {Elsevier Inc.},
title = {{What happens when software developers are (un)happy}},
url = {https://doi.org/10.1016/j.jss.2018.02.041},
volume = {140},
year = {2018}
}
@article{Ford2015a,
abstract = {When learning to program, frustrating experiences contribute to negative learning outcomes and poor retention in the field. Defining a common framework that explains why these experiences occur can lead to better interventions and learning mechanisms. To begin constructing such a framework, we asked 45 software developers about the severity of their frustration and to recall their most recent frustrating programming experience. As a result, 67{\%} considered their frustration to be severe. Further, we distilled the reported experiences into 11 categories, which include issues with mapping behaviors to code and broken programming tools. Finally, we discuss future directions for defining our framework and designing future interventions.},
author = {Ford, Denae and Parnin, Chris},
doi = {10.1109/CHASE.2015.19},
isbn = {9781479919345},
journal = {Proceedings - 8th International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE 2015},
keywords = {Frustration,Software Development},
number = {2},
pages = {115--116},
publisher = {IEEE},
title = {{Exploring causes of frustration for software developers}},
year = {2015}
}
@article{Murgia2014a,
abstract = {Software development is a collaborative activity in which developers interact to create and maintain a complex software system. Human collaboration inevitably evokes emotions like joy or sadness, which can affect the collaboration either positively or negatively, yet not much is known about the individual emotions and their role for software development stakeholders. In this study, we analyze whether development artifacts like issue reports carry any emotional information about software development. This is a first step towards verifying the feasibility of an automatic tool for emotion mining in software development artifacts: if humans cannot determine any emotion from a software artifact, neither can a tool. Analysis of the Apache Software Foundation issue tracking system shows that developers do express emotions (in particular gratitude, joy and sadness). However, the more context is provided about an issue report, the more human raters start to doubt and nuance their interpretation of emotions. More investigation is needed before building a fully automatic emotion mining tool. Copyright is held by the author/owner(s). Publication rights licensed to ACM.},
author = {Murgia, Alessandro and Tourani, Parastou and Adams, Bram and Ortu, Marco},
doi = {10.1145/2597073.2597086},
isbn = {9781450328630},
journal = {11th Working Conference on Mining Software Repositories, MSR 2014 - Proceedings},
keywords = {Emotion mining,Empirical software engineering,Issue report},
number = {January 2016},
pages = {262--271},
title = {{Do developers feel emotions? An exploratory analysis of emotions in software artifacts}},
year = {2014}
}
@article{Ford2015,
abstract = {When learning to program, frustrating experiences contribute to negative learning outcomes and poor retention in the field. Defining a common framework that explains why these experiences occur can lead to better interventions and learning mechanisms. To begin constructing such a framework, we asked 45 software developers about the severity of their frustration and to recall their most recent frustrating programming experience. As a result, 67{\%} considered their frustration to be severe. Further, we distilled the reported experiences into 11 categories, which include issues with mapping behaviors to code and broken programming tools. Finally, we discuss future directions for defining our framework and designing future interventions.},
author = {Ford, Denae and Parnin, Chris},
doi = {10.1109/CHASE.2015.19},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/07166102.pdf:pdf},
isbn = {9781479919345},
journal = {Proceedings - 8th International Workshop on Cooperative and Human Aspects of Software Engineering, CHASE 2015},
keywords = {Frustration,Software Development},
number = {2},
pages = {115--116},
publisher = {IEEE},
title = {{Exploring causes of frustration for software developers}},
year = {2015}
}
@article{Graziotin2015b,
abstract = {Affects-emotions and moods-have an impact on cognitive processing activities and the working performance of individuals. It has been established that software development tasks are undertaken through cognitive processing activities. Therefore, we have proposed to employ psychology theory and measurements in software engineering (SE) research. We have called it "psychoempirical software engineering". However, we found out that existing SE research has often fallen into misconceptions about the affect of developers, lacking in background theory and how to successfully employ psychological measurements in studies. The contribution of this paper is threefold. (1) It highlights the challenges to conduct proper affect-related studies with psychology; (2) it provides a comprehensive literature review in affect theory; and (3) it proposes guidelines for conducting psychoempirical software engineering.},
archivePrefix = {arXiv},
arxivId = {1507.03767},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1145/2804381.2804386},
eprint = {1507.03767},
isbn = {9781450338189},
journal = {7th International Workshop on Social Software Engineering, SSE 2015 - Proceedings},
keywords = {Affects,Emotions,Engineering,Human aspects in software development,Moods,Psychoempirical software,Psychology of programming},
pages = {25--32},
title = {{Understanding the affect of developers: Theoretical background and guidelines for psychoempirical software engineering}},
year = {2015}
}
@article{Graziotin2015,
abstract = {Affects-emotions and moods-have an impact on cognitive processing activities and the working performance of individuals. It has been established that software development tasks are undertaken through cognitive processing activities. Therefore, we have proposed to employ psychology theory and measurements in software engineering (SE) research. We have called it "psychoempirical software engineering". However, we found out that existing SE research has often fallen into misconceptions about the affect of developers, lacking in background theory and how to successfully employ psychological measurements in studies. The contribution of this paper is threefold. (1) It highlights the challenges to conduct proper affect-related studies with psychology; (2) it provides a comprehensive literature review in affect theory; and (3) it proposes guidelines for conducting psychoempirical software engineering.},
archivePrefix = {arXiv},
arxivId = {1507.03767},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1145/2804381.2804386},
eprint = {1507.03767},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/p25-graziotin.pdf:pdf},
isbn = {9781450338189},
journal = {7th International Workshop on Social Software Engineering, SSE 2015 - Proceedings},
keywords = {Affects,Emotions,Engineering,Human aspects in software development,Moods,Psychoempirical software,Psychology of programming},
pages = {25--32},
title = {{Understanding the affect of developers: Theoretical background and guidelines for psychoempirical software engineering}},
year = {2015}
}
@article{Graziotin2017a,
abstract = {The growing literature on affect among software developers mostly reports on the linkage between happiness, software quality, and developer productivity. Understanding the positive side of happiness - positive emotions and moods - is an attractive and important endeavor. Scholars in industrial and organizational psychology have suggested that also studying the negative side - unhappiness - could lead to cost-effective ways of enhancing working conditions, job performance, and to limiting the occurrence of psychological disorders. Our comprehension of the consequences of (un)happiness among developers is still too shallow, and is mainly expressed in terms of development productivity and software quality. In this paper, we attempt to uncover the experienced consequences of unhappiness among software developers. Using qualitative data analysis of the responses given by 181 questionnaire participants, we identified 49 consequences of unhappiness while doing software development. We found detrimental consequences on developers' mental well-being, the software development process, and the produced artifacts. Our classification scheme, available as open data, will spawn new happiness research opportunities of cause-effect type, and it can act as a guideline for practitioners for identifying damaging effects of unhappiness and for fostering happiness on the job.},
archivePrefix = {arXiv},
arxivId = {1701.05789},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1109/SEmotion.2017.5},
eprint = {1701.05789},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsIntelligentSystems/references/1701.05789.pdf:pdf},
isbn = {9781538627938},
journal = {Proceedings - 2017 IEEE/ACM 2nd International Workshop on Emotion Awareness in Software Engineering, SEmotion 2017},
keywords = {affect,behavioral software engineering,developer experience,emotion,happiness,human aspects,mood},
pages = {42--47},
title = {{Consequences of unhappiness while developing software}},
year = {2017}
}
@article{Graziotin2017b,
abstract = {The happy-productive worker thesis states that happy workers are more productive. Recent research in software engineering supports the thesis, and the ideal of flourishing happiness among software developers is often expressed among industry practitioners. However, the literature suggests that a cost-effective way to foster happiness and productivity among workers could be to limit unhappiness. Psychological disorders such as job burnout and anxiety could also be reduced by limiting the negative experiences of software developers. Simultaneously, a baseline assessment of (un)happiness and knowledge about how developers experience it are missing. In this paper, we broaden the understanding of unhappiness among software developers in terms of (1) the software developer population distribution of (un)happiness, and (2) the causes of unhappiness while developing software. We conducted a large-scale quantitative and qualitative survey, incorporating a psychometrically validated instrument for measuring (un)happiness, with 2 220 developers, yielding a rich and balanced sample of 1318 complete responses. Our results indicate that software developers are a slightly happy population, but the need for limiting the unhappiness of developers remains. We also identified 219 factors representing causes of unhappiness while developing software. Our results, which are available as open data, can act as guidelines for practitioners in management positions and developers in general for fostering happiness on the job. We suggest considering happiness in future studies of both human and technical aspects in software engineering.},
archivePrefix = {arXiv},
arxivId = {1703.04993},
author = {Graziotin, Daniel and Fagerholm, Fabian and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.1145/3084226.3084242},
eprint = {1703.04993},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/p324-Graziotin.pdf:pdf},
isbn = {9781450348041},
journal = {ACM International Conference Proceeding Series},
keywords = {Affect,Behavioral software engineering,Developer experience,Emotion,Happiness,Human aspects,Mood},
pages = {324--333},
title = {{On the unhappiness of software developers}},
volume = {Part F1286},
year = {2017}
}
@article{Graziotin2015c,
abstract = {Affects-emotions and moods-have an impact on cognitive activities and the working performance of individuals. Development tasks are undertaken through cognitive processes, yet software engineering research lacks theory on affects and their impact on software development activities. In this paper, we report on an interpretive study aimed at broadening our understanding of the psychology of programming in terms of the experience of affects while programming, and the impact of affects on programming performance. We conducted a qualitative interpretive study based on: face-to-face open-ended interviews, in-field observations, and e-mail exchanges. This enabled us to construct a novel explanatory theory of the impact of affects on development performance. The theory is explicated using an established taxonomy framework. The proposed theory builds upon the concepts of events, affects, attractors, focus, goals, and performance. Theoretical and practical implications are given.},
archivePrefix = {arXiv},
arxivId = {1505.07240},
author = {Graziotin, Daniel and Wang, Xiaofeng and Abrahamsson, Pekka},
doi = {10.7717/peerj-cs.18},
eprint = {1505.07240},
issn = {21678359},
journal = {PeerJ},
keywords = {Affects,Emotions,Human aspects of software engineering,Interpretivism,Moods,Performance,Process theory,Productivity,Psychology of programming,Theory building},
number = {1},
pages = {1--31},
title = {{How do you feel, developer? An explanatory theory of the impact of affects on programming performance}},
volume = {2015},
year = {2015}
}
@article{Wrobel2013,
abstract = {This paper presents the results of a survey on the experience of emotions in the work of software developers. Quantitative analysis revealed information about emotions affecting programmers, their frequency and impact on their performance. The concept of emotional risk to productivity was also presented. It allows to choose the emotional states, which should be avoided. Furthermore, all collected data were analyzed with information about the experience of developers. In addition to most hazardous emotions, those with the most positive impact on productivity were selected. {\textcopyright} 2013 IEEE.},
author = {Wrobel, Michal R.},
doi = {10.1109/HSI.2013.6577875},
file = {:Users/leosilva/Documents/Estudo/Doutorado/Coimbra/2019$\backslash$:2020/Disciplinas/CurrentTopicsSoftwareAndInternetServices/paper/references/06577875.pdf:pdf},
isbn = {9781467356374},
journal = {2013 6th International Conference on Human System Interactions, HSI 2013},
pages = {518--523},
publisher = {IEEE},
title = {{Emotions in the software development process}},
year = {2013}
}
